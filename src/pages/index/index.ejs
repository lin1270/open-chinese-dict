<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="initial-scale=1.0,minimum-scale=0.3,maximum-scale=3.0,user-scalable=yes,width=device-width">
    <meta name="keywords" content="<%= htmlWebpackPlugin.options.keywords %>"/>
    <title><%= htmlWebpackPlugin.options.title %></title>


    <% if (htmlWebpackPlugin.options.px2rem) { %>
    <script>
      //立即执行函数中，传入window,doucment避免全局污染
      /*
      思路是在页面初始化的时候设置一次html的字体大小
      然后监听设备的宽度改变和刷新，在处理函数中获取当前屏幕的宽度，随之改变
      html的font-size大小。
      */
      (function flexible (window, document) {
      //获取html
        var docEl = document.documentElement
      //获取设备像素度比
        var dpr = window.devicePixelRatio || 1

        // adjust body font size 调整正文字体大小
        function setBodyFontSize () {
          if (document.body) {
            document.body.style.fontSize = (12 * dpr) + 'px'
          }
          else {
            document.addEventListener('DOMContentLoaded', setBodyFontSize)
          }
        }
        setBodyFontSize();

        // set 1rem = viewWidth / 10
        function setRemUnit () {
          //获取屏幕宽度
          var rem = docEl.clientWidth / 10
          // var rem = 750 / 10 
      //修改html字体大小
          docEl.style.fontSize = rem + 'px'
        }

        setRemUnit()

        // reset rem unit on page resize   页面宽度改变时再次改变html的字体大小
        window.addEventListener('resize', setRemUnit)
        window.addEventListener('pageshow', function (e) {
          if (e.persisted) {
            setRemUnit()
          }
        })

        // detect 0.5px supports 检测支持0.5px 
      //看到这段代码有些疑惑 似懂非懂
        if (dpr >= 2) {
          var fakeBody = document.createElement('body')
          var testElement = document.createElement('div')
          testElement.style.border = '.5px solid transparent'
          fakeBody.appendChild(testElement)
          docEl.appendChild(fakeBody)
          if (testElement.offsetHeight === 1) {
            
            docEl.classList.add('hairlines')
          }
          docEl.removeChild(fakeBody)
        }
      }(window, document))
    </script>
    <% } %>
  </head>
  <body>
      <% if (htmlWebpackPlugin.options.isdev) { %>
        <script src="//cdn.bootcss.com/jquery/3.4.1/jquery.min.js"></script>
        <script src="//cdn.bootcss.com/vue/2.6.10/vue.js"></script>
        <script src="//cdn.bootcss.com/vuex/2.5.0/vuex.min.js"></script>
      <% } else { %>
        <script src="//www.maiyuren.com/static/lib/jquery/jquery.min.js"></script>
        <script src="//www.maiyuren.com/static/lib/vue/vue.min.js"></script>
        <script src="//www.maiyuren.com/static/lib/vuex/vuex.min.js"></script>
      <% } %>


    <div id="app"></div>

    <!-- vconsole -->
    <% if (htmlWebpackPlugin.options.isdev && htmlWebpackPlugin.options.useVconsole) { %>
      <script src="//cdn.bootcss.com/vConsole/3.3.2/vconsole.min.js"></script>
      <script>
          // 初始化
          var vConsole = new VConsole();
        </script>
    <% } %>
  </body>
</html>
